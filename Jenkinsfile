pipeline {
  agent any

  tools {
    jdk 'jdk17' // must match name configured in Global Tool Configuration
  }

  options {
    buildDiscarder(logRotator(numToKeepStr: '10'))
    timestamps()
  }

  stages {
    stage('Checkout') {
      steps {
        checkout([
          $class: 'GitSCM',
          branches: [[name: '*/main']], // change if your default branch is master or something else
          userRemoteConfigs: [[
            url: 'https://github.com/your-username/your-repo.git', // replace with actual URL
            credentialsId: 'git-credentials' // remove or adjust if public repo
          ]]
        ])
      }
    }

    stage('Verify Wrapper & Java') {
      steps {
        sh './gradlew --version'
        sh 'java -version'
      }
    }

    stage('Build') {
      steps {
        sh './gradlew clean build --no-daemon'
      }
    }

    stage('Test Results') {
      steps {
        // test results are typically generated by Gradle under build/test-results
        junit '**/build/test-results/test/*.xml'
      }
    }

    stage('Archive') {
      steps {
        archiveArtifacts artifacts: 'build/libs/*.jar', fingerprint: true
      }
    }
  }

  post {
    success {
      echo 'Build succeeded!'
    }
    failure {
      echo 'Build failed. Check console output.'
    }
  }
}
